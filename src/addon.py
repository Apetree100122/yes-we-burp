from burp import IBurpExtender, ITabfrom javax.swing import JTabbedPanefrom Tabs import OptionsTab, ProgramsTabfrom api import Auth, AuthMethod, YWHApi, APIExceptionfrom helpers import BurpHTTP,async_call import contextDEFAULT_URI = "https://api.yeswehack.com"EXTENSION_NAME = "Yes_We_Burp"TAB_NAME = "Yes_We_Hack"VERSION = "1.2"
class BurpExtender(IBurpExtender,  ITab): connect_callback = list()error_callback = list()
    def registerExtenderCallbacks(self, callbacks):  context.addon = selfcontext.version = VERSION context.callbacks = callbacks context.callbacks.setExtensionName(EXTENSION_NAME)  api_url = context.settings.load("apiurl", DEFAULT_URI) auth_name = context.settings.load("auth_method", AuthMethod.anonymous, if auth_name == AuthMethod.email_pass: email = context.settings.load("email")passwd = context.settings.load("password")   auth = Auth.email_pass(email, passwd)  else: auth = Auth.anonymous()    try:       context.api = YWHApi(api_url, fetcher=BurpHTTP(), auth=auth)   except APIException:    context.api = YWHApi(api_url, fetcher=BurpHTTP(), auth=Auth.anonymous())context.tabs["Programs"] = ProgramsTab()   context.tabs["Options"] = OptionsTab()   tab = JTabbedPane(JTabbedPane.TOP)for name, panel in context.tabs.items():   context.callbacks.customizeUiComponent(panel)    tab.add(name, panel)   self.getUiComponent = lambda: tabcontext.callbacks.addSuiteTab(self)  if context.settings.load_bool("autoconnect", False):      self.connect()
    def getTabCaption(self):   return TAB_NAME
    def register_on_connect(self, callback):  self.connect_callback.append(callback)
    def register_on_error(self, callback):self.error_callback.append(callback)
    def connect(self): def success(*args):for callback in self.connect_callback:callback() def error(error):  for callback in self.error_callback: callback(error)async_call(context.api.authenticate, success, error)
